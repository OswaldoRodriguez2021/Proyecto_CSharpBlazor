@page "/Categories"
@inject ICategoriService CategoryService

<h3>Categories</h3> 
<p> @Message </p>


@if (categories == null)
{
    <p><em>Loading... Espere que hayan datos en la lista </em></p>
}
else
{

    <div class="container table">
        <div class="row">
            <div class="col-12 alert-success">
                <a href="/CategoriesDetails"> Agregar Nueva Categoria </a>
            </div>
        </div>

        <div class="row">
            <div class="col-12 alert-light">
                <h4 class="text-center">
                    <i> Nombre de la Categoria </i>
                </h4>
            </div>
        </div>

        <div class="row">
            @foreach (var category in categories)
            {
                <div class="col-8 alert-success">
                    @category.Name
                </div>

                <div class="col-2 alert-info">
                    <a href="/CategoriesDetails/@category.Id">
                        <i>Modificar</i>
                    </a>
                </div>

                <div class="col-2 alert-war">
                    <a href="/Categorydelete/@category.Id">
                        <i>Eliminar</i>
                    </a>
                </div>

            }
        </div>

    </div>

}

@code {

    public IEnumerable<Category> categories { get; set; }
    public string Message { get; set; } = "Listo :)";

    protected async override Task OnInitializedAsync()
    {
        try
        {
            categories = await CategoryService.GetAllCategories();
        }
        catch (Exception ex)
        {
            Message = "Error inesperado  :( " + ex.Message;
        }

    }

}